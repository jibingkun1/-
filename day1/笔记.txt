第一步：我们需要先创建一个本地的版本库（其实也就是一个文件夹）。
你可以直接右击新建文件夹，也可以右击打开Git bash命令行窗口通过命令来创建。
现在我通过命令行在桌面新建一个TEST文件夹（你也可以在其他任何地方创建这个文件夹），并且进入这个文件夹
第二步：通过命令git init把这个文件夹变成Git可管理的仓库。
这时你会发现TEST里面多了个.git文件夹，它是Git用来跟踪和管理版本库的。如果你看不到，是因为它默认是隐藏文件，那你就需要设置一下让隐藏文件可见。
第三步：这时候你就可以把你的项目粘贴到这个本地Git仓库里面（粘贴后你可以通过git status来查看你当前的状态），然后通过git add把项目添加到仓库（或git add .把该目录下的所有文件添加到仓库，注意点是用空格隔开的）。在这个过程中你其实可以一直使用git status来查看你当前的状态。
这里提示你虽然把项目粘贴过来了，但还没有add到Git仓库上，然后我们通过git add .把刚才复制过来的项目全部添加到仓库上。
第四步：用git commit把项目提交到仓库。
-m后面引号里面是本次提交的注释内容，这个可以不写，但最好写上，不然会报错，详情自行Google。 好了，我们本地Git仓库这边的工作做完了，下面就到了连接远程仓库（也就是连接Github）
 由于本地Git仓库和Github仓库之间的传输是通过SSH加密的，所以连接时需要设置一下
第五步：创建SSH KEY。先看一下你C盘用户目录下有没有.ssh目录，有的话看下里面有没有id_rsa和id_rsa.pub这两个文件，有就跳到下一步，没有就通过下面命令创建
$ ssh-keygen -t rsa -C "youremail@example.com"
然后一路回车。这时你就会在用户下的.ssh目录里找到id_rsa和id_rsa.pub这两个文件
第六步：登录Github,找到右上角的图标，打开点进里面的Settings，再选中里面的SSH and GPG KEYS，点击右上角的New SSH key，然后Title里面随便填，再把刚才id_rsa.pub里面的内容复制到Title下面的Key内容框里面，最后点击Add SSH key，这样就完成了SSH Key的加密。具体步骤也可看下面：
 第七步：在Github上创建一个Git仓库。
你可以直接点New repository来创建，比如我创建了一个TEST2的仓库（因为我里面已经有了一个test的仓库，所以不能再创建TEST仓库）。
第八步：在Github上创建好Git仓库之后我们就可以和本地仓库进行关联了，根据创建好的Git仓库页面的提示，可以在本地TEST仓库的命令行输入：
$ git remote add origin https://github.com/guyibang/TEST2.git
 注意origin后面加的是你Github上创建好的仓库的地址。
第九步：关联好之后我们就可以把本地库的所有内容推送到远程仓库（也就是Github）上了，通过：
$ git push -u origin master
       由于新建的远程仓库是空的，所以要加上-u这个参数，等远程仓库里面有了内容之后，下次再从本地库上传内容的时候只需下面这样就可以了
$ git push origin master
这时候你再重新刷新你的Github页面进入刚才新建的那个仓库里面就会发现项目已经成功上传了

错误解决：
第一种：
1.输入 git push -u origin master之后
出现了“error:src refspec master does not match any.error: failed to push some refs to ‘https://github.com/ly1225xxl/boot.git’”错误
git pull --rebase origin master
git commit -m ‘xx commit’
git config --global user.mail “邮箱”
git config --global user.name “账号名”
注：mail和name后有一个空格
git commit -m ‘xx commit’ 再次提交
git pull --rebase origin master
git push -u origin master
发布项目到github上的步骤：
1 新建项目库
2 在所要上传的项目右键–Git Bash here
3 输入 git init
4 上传文件 Git add .[可指定文件名，否则上传所有文件]–只是放在缓冲区
5 git commit -m “first commit”
6 grape11111 密码：2549107521git
7 git push -u origin master–推送并更新
第二种：
git push到github远程仓库的时候，出现报错”Everything up-to-date”，严格来说也不算报错，它只是在告诉你，提交区所有的东西都是最新的。

$ git push origin master
Everything up-to-date
之所以引起这个信息的原因有：
1）没有git add;
2）git add 了，但忘了git commit -m “提交信息".




python -m venv env     创建虚拟环境
env\Scripts\activate      激活虚拟环境
deactivate    退出虚拟环境
激活后，前面会出现一个 虚拟环境名字
pip  install  flask  安装flask

click  命令行工具
itsdange   加密

Jinja2  模板渲染引擎
MarkupSafe    html转义字符
Werkzeug  本地服务器，写好的项目区运行就用这个
flask  是开发框架，依赖于 jinja2，werkzeug

MTV    Model(模型)    Templates(模板)    Views(视图函数) 
MVC    Model(模型)    View(试图模板)    Controller(控制器)


